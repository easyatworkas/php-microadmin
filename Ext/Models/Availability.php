<?php

/*
 * [x] Refactor
 * [x] Reformat
 * [x] Complete
 */

namespace Ext\Models;

/**
 * @property mixed|null $id                     PRIMARY KEY             OK
 * @property mixed|null $employee_id            FOREIGN KEY             OK
 * @property mixed|null $from
 * @property mixed|null $to
 * @property mixed|null $repeat
 * @property mixed|null $generated_by_id        FOREIGN KEY (optional)  OK
 * @property mixed|null $generated_by_type
 * @property mixed|null $customer_id            FOREIGN KEY             OK
 * @property mixed|null $active
 * @property mixed|null $work_days
 * @property mixed|null $days                   with
 */
class Availability extends Model
{
    /**
     * Gets Customer Model from property $customer_id
     *
     * @return \Ext\Models\Customer
     * @author Torbjørn Kallstad
     */
    public function owner(): Customer
    {
        return Customer::get($this->customer_id);
    }

    /**
     * Gets Employee Model from property $employee_id
     *
     * @return \Ext\Models\Employee
     * @author Torbjørn Kallstad
     */
    public function employee(): Employee
    {
        return $this->owner()->getEmployee($this->employee_id);
    }

    /**
     * Gets Model this Availability was generated by, from optional property $generated_by_id
     * matched against property $generated_by_type
     *
     * @return \Ext\Models\Model|null
     * @author Torbjørn Kallstad
     */
    public function generator(): ?Model
    {
        return match ($this->generated_by_type) {
            'absence' => $this->employee()->getAbsence($this->generated_by_id),
            'off_time' => $this->employee()->getOffTime($this->generated_by_id),
            default => null,
        };
    }

    /**
     * Gets list of all Availability Days
     *
     * @return array
     * @author Torbjørn Kallstad
     */
    public function days(): array
    {
        if (!is_array($this->getAttribute('days'))) {
            $withDays = static::newQuery($this->getPath())
                ->with([ 'days' ])
                ->get($this->getKey());

            return $this->attributes[ 'days' ] = $withDays->getAttribute('days') ?? [];
        }

        return array_map(function (array $attributes) {
            return AvailabilityDay::newInstance($attributes);
        }, $this->getAttribute('days'));
    }
}